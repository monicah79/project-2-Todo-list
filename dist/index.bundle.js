"use strict";(self.webpackChunkproject_2_todo_list=self.webpackChunkproject_2_todo_list||[]).push([[826],{426:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,"* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background-color: #fff;\r\n  font-family: 'MyFont', sans-serif;\r\n}\r\n\r\nmain {\r\n  margin-top: 30px;\r\n}\r\n\r\n.top {\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: space-between;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  border-bottom: 2px solid #d3d3d3;\r\n  padding: 15px;\r\n}\r\n\r\n.fa-refresh {\r\n  align-self: center;\r\n}\r\n\r\n.to-do {\r\n  margin: 0;\r\n}\r\n\r\n.top-b {\r\n  display: flex;\r\n  border: none;\r\n  width: 80%;\r\n}\r\n\r\n.boot-ic {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 2px solid #d3d3d3;\r\n}\r\n\r\n.fa-level-down {\r\n  transform: rotate(90deg);\r\n  padding: 15px 0;\r\n  align-self: center;\r\n}\r\n\r\n.fa-ellipsis-v {\r\n  cursor: pointer;\r\n}\r\n\r\n.hide {\r\n  display: none;\r\n}\r\n\r\n.fa-trash {\r\n  display: none;\r\n}\r\n\r\n.show {\r\n  display: block;\r\n}\r\n\r\n.todo-list {\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  width: 90%;\r\n}\r\n\r\n.edit-task {\r\n  background: rgb(255, 255, 0);\r\n}\r\n\r\n.li-todo {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 15px;\r\n  margin: 0;\r\n  border-bottom: 2px solid #d9d9d9;\r\n}\r\n\r\n.check {\r\n  display: flex;\r\n  gap: 15px;\r\n  align-items: center;\r\n}\r\n\r\n::-webkit-input-placeholder {\r\n  font-style: italic;\r\n}\r\n\r\n.bottom {\r\n  text-align: center;\r\n  padding: 15px;\r\n}\r\n\r\n.bottom-bg {\r\n  background: #d9d9d9;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;EACtB,iCAAiC;AACnC;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,8BAA8B;EAC9B,UAAU;EACV,cAAc;EACd,gCAAgC;EAChC,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,UAAU;EACV,cAAc;EACd,mBAAmB;EACnB,aAAa;EACb,gCAAgC;AAClC;;AAEA;EACE,wBAAwB;EACxB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,UAAU;EACV,UAAU;AACZ;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,aAAa;EACb,SAAS;EACT,gCAAgC;AAClC;;AAEA;EACE,aAAa;EACb,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,mBAAmB;EACnB,UAAU;EACV,cAAc;AAChB",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background-color: #fff;\r\n  font-family: 'MyFont', sans-serif;\r\n}\r\n\r\nmain {\r\n  margin-top: 30px;\r\n}\r\n\r\n.top {\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: space-between;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  border-bottom: 2px solid #d3d3d3;\r\n  padding: 15px;\r\n}\r\n\r\n.fa-refresh {\r\n  align-self: center;\r\n}\r\n\r\n.to-do {\r\n  margin: 0;\r\n}\r\n\r\n.top-b {\r\n  display: flex;\r\n  border: none;\r\n  width: 80%;\r\n}\r\n\r\n.boot-ic {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 2px solid #d3d3d3;\r\n}\r\n\r\n.fa-level-down {\r\n  transform: rotate(90deg);\r\n  padding: 15px 0;\r\n  align-self: center;\r\n}\r\n\r\n.fa-ellipsis-v {\r\n  cursor: pointer;\r\n}\r\n\r\n.hide {\r\n  display: none;\r\n}\r\n\r\n.fa-trash {\r\n  display: none;\r\n}\r\n\r\n.show {\r\n  display: block;\r\n}\r\n\r\n.todo-list {\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  width: 90%;\r\n}\r\n\r\n.edit-task {\r\n  background: rgb(255, 255, 0);\r\n}\r\n\r\n.li-todo {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 15px;\r\n  margin: 0;\r\n  border-bottom: 2px solid #d9d9d9;\r\n}\r\n\r\n.check {\r\n  display: flex;\r\n  gap: 15px;\r\n  align-items: center;\r\n}\r\n\r\n::-webkit-input-placeholder {\r\n  font-style: italic;\r\n}\r\n\r\n.bottom {\r\n  text-align: center;\r\n  padding: 15px;\r\n}\r\n\r\n.bottom-bg {\r\n  background: #d9d9d9;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n}\r\n"],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(i[l]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);r&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var l=e[s],d=r.base?l[0]+r.base:l[0],c=o[d]||0,A="".concat(d," ").concat(c);o[d]=c+1;var p=n(A),m={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var g=a(m,r);r.byIndex=s,t.splice(s,0,{identifier:A,updater:g,references:1})}i.push(A)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=n(o[i]);t[s].references--}for(var l=r(e,a),d=0;d<o.length;d++){var c=n(o[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}o=l}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},759:(e,t,n)=>{const r=e=>{let t=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[];t=t.filter((t=>t.index!==e)),localStorage.setItem("todos",JSON.stringify(t))},a=(e,t,n)=>{let r=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[];r=r.map((r=>(r.index===n&&(r.task=e,r.completed=t),r))),localStorage.setItem("todos",JSON.stringify(r))},o=()=>{const e=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[],t=[];e.forEach((e=>{const n={...e,index:(t.length+1).toString()};t.push(n)})),localStorage.setItem("todos",JSON.stringify(t)),window.location.reload()};var i=n(379),s=n.n(i),l=n(795),d=n.n(l),c=n(569),A=n.n(c),p=n(565),m=n.n(p),g=n(216),u=n.n(g),f=n(589),E=n.n(f),h=n(426),C={};C.styleTagTransform=E(),C.setAttributes=m(),C.insert=A().bind(null,"head"),C.domAPI=d(),C.insertStyleElement=u(),s()(h.Z,C),h.Z&&h.Z.locals&&h.Z.locals;const v=document.querySelector(".input-form"),b=document.querySelector(".todo-list"),x=document.querySelector(".top-b");v.addEventListener("submit",(e=>{e.preventDefault();const t=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[],n=x.value,o=(t.length+1).toString();if(n){const e=document.createElement("li");e.className="li-todo";const t=document.createAttribute("data-index");t.value=o,e.setAttributeNode(t),e.innerHTML=`<div class="check">\n    <input type="checkbox" class="checkbox">\n    <div class="parent"><p class="para">${n}</p></div>\n</div>\n<div>\n    <i class="fa fa-ellipsis-v" aria-hidden="true"></i>\n    <i class="fa fa-trash" aria-hidden="true"></i>\n</div>`,b.appendChild(e);const i={};i.task=n,i.completed=!1,i.index=o,((e,t,n)=>{const r={task:e,completed:!1,index:n},a=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[];a.push(r),localStorage.setItem("todos",JSON.stringify(a))})(n,0,o),x.value="",e.querySelectorAll(".checkbox").forEach((e=>{e.addEventListener("change",(t=>{if(!0===e.checked){t.target.nextElementSibling.childNodes[0].style.textDecoration="line-through";const e=t.target.parentElement.parentElement,{index:n}=e.dataset,r=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[];r.filter((e=>(e.index===n&&(e.completed=!0),!1))),localStorage.setItem("todos",JSON.stringify(r))}else{t.target.nextElementSibling.childNodes[0].style.textDecoration="none";const e=t.target.parentElement.parentElement,{index:n}=e.dataset,r=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[];r.filter((e=>(e.index===n&&(e.completed=!1),!1))),localStorage.setItem("todos",JSON.stringify(r))}}))}));const s=e.querySelector(".fa-ellipsis-v"),l=e.querySelector(".fa-trash");s.addEventListener("click",(t=>{s.classList.add("hide"),l.classList.add("show");const n=t.target.parentElement.previousElementSibling.lastElementChild.childNodes[0],r=document.createElement("input");r.type="text",r.className="changed-task",e.classList.add("edit-task"),r.value=n.textContent;const o=t.target.parentElement.parentElement.dataset.index,i=t.target.parentElement.previousElementSibling.lastElementChild;i.removeChild(n),i.appendChild(r),r.addEventListener("keypress",(t=>{"Enter"===t.key&&(n.textContent=r.value,i.appendChild(n),i.removeChild(r),e.classList.remove("edit-task"),s.classList.remove("hide"),l.classList.remove("show")),a(n.textContent,!1,o)}))})),l.addEventListener("click",(t=>{const n=t.target.parentElement.parentElement,{index:a}=n.dataset;b.removeChild(e),r(a)}))}})),document.querySelector(".bottom").addEventListener("click",(()=>{let e=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[];e=e.filter((e=>!0!==e.completed)),localStorage.setItem("todos",JSON.stringify(e)),o(),window.location.reload()})),window.addEventListener("DOMContentLoaded",(()=>{(()=>{const e=document.querySelector(".todo-list"),t=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[];t.length>0&&t.forEach((t=>{const n=document.createElement("li");n.className="li-todo";const i=document.createAttribute("data-index");i.value=t.index,n.setAttributeNode(i),n.innerHTML=`<div class="check">\n      <input type="checkbox" class="checkbox">\n      <div class="parent"><p class="para">${t.task}</p></div>\n  </div>\n  <div>\n      <i class="fa fa-ellipsis-v" aria-hidden="true"></i>\n      <i class="fa fa-trash" aria-hidden="true"></i>\n  </div>`,e.appendChild(n),n.querySelectorAll(".checkbox").forEach((e=>{e.addEventListener("change",(t=>{if(!0===e.checked){t.target.nextElementSibling.childNodes[0].style.textDecoration="line-through";const e=t.target.parentElement.parentElement,{index:n}=e.dataset,r=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[];r.filter((e=>(e.index===n&&(e.completed=!0),!1))),localStorage.setItem("todos",JSON.stringify(r))}else{t.target.nextElementSibling.childNodes[0].style.textDecoration="none";const e=t.target.parentElement.parentElement,{index:n}=e.dataset,r=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[];r.filter((e=>(e.index===n&&(e.completed=!1),!1))),localStorage.setItem("todos",JSON.stringify(r))}}))}));const s=n.querySelector(".fa-ellipsis-v"),l=n.querySelector(".fa-trash");s.addEventListener("click",(e=>{s.classList.add("hide"),l.classList.add("show");const t=e.target.parentElement.previousElementSibling.lastElementChild.childNodes[0],r=document.createElement("input");r.type="text",r.className="changed-task",n.classList.add("edit-task"),r.value=t.textContent;const o=e.target.parentElement.parentElement.dataset.index,i=e.target.parentElement.previousElementSibling.lastElementChild;i.removeChild(t),i.appendChild(r),r.addEventListener("keypress",(e=>{"Enter"===e.key&&(t.textContent=r.value,i.appendChild(t),i.removeChild(r),n.classList.remove("edit-task"),s.classList.remove("hide"),l.classList.remove("show")),a(t.textContent,!1,o)}))})),l.addEventListener("click",(t=>{const a=t.target.parentElement.parentElement,{index:i}=a.dataset;e.removeChild(n),r(i),o(),window.location.reload()}))}))})()})),v.addEventListener("submit",(e=>{e.preventDefault();const t=function(e){const t=document.createElement("li"),n=document.createElement("input"),r=document.createElement("label");return n.type="checkbox",t.innerText=e,t.appendChild(n),t.appendChild(r),t}(e.target.elements.task.value);b.appendChild(t),e.target.elements.task.value=""}))}},e=>{e(e.s=759)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,